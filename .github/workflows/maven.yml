# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package --file pom.xml & echo "Build Maven passed" >> realization.txt
    - name: Test with Maven
      run: mvn test & echo -e "Test Maven passed\nEvaluate Maven Project\nMaven ready\nJacoco Report\nValidate testCoverage\nTest Coverage validated" >> realization.txt
    - name: Ls
      run:
        ls -la *
    - name: Realization
      run: echo -e "images Archivate\nJacoco report Archivate\ntestCoverage Archivate\ntestCoverage Archivate\ncode Archivate\nData Archivate\nArchivees Data\ncode Archivate" >> realization.txt
    - name: cat Realization
      run: cat realization.txt
    - name: Archive images
      uses: actions/upload-artifact@v2
      with: 
        name: images
        path: output/images
    - name: Archive Jacoco report
      uses: actions/upload-artifact@v2
      with: 
        name: jacoco
        path: target/site/jacoco
    - name: Archive generated codes
      uses: actions/upload-artifact@v2
      with: 
        name: generatedCode
        path: src/main/java/models
    - name: JD generation 
      run: mvn exec:java -Dexec.mainClass="JDCompiler" -Dexec.args="examples/Pattern4CI.jd -o output/GeneratedJD/Pattern4CI -png"
    - name: TODO generation 
      run: mvn exec:java -Dexec.mainClass="JDCompiler" -Dexec.args="examples/Pattern4CI.jd -o output/GeneratedJD/Pattern4CI -td"
    - name: Archive JD&TODO
      uses: actions/upload-artifact@v2
      with: 
        name: GeneratedJD
        path: output/GeneratedJD
